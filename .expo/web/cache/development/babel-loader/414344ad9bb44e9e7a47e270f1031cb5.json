{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React from 'react';\nimport AppStyles from \"../styles/AppStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddToDoModal(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      todo = _React$useState2[0],\n      setTodo = _React$useState2[1];\n\n  return _jsxs(View, {\n    style: AppStyles.container,\n    children: [_jsx(Text, {\n      style: AppStyles.header,\n      children: \"Add ToDo\"\n    }), _jsx(TextInput, {\n      style: [AppStyles.textInput, AppStyles.darkTextInput],\n      placeholder: \"ToDo\",\n      value: todo,\n      onChangeText: setTodo\n    }), _jsxs(View, {\n      style: [AppStyles.rowContainer, AppStyles.rightAligned, AppStyles.rightMargin],\n      children: [_jsx(Button, {\n        title: \"Cancel\",\n        onPress: props.onClose\n      }), _jsx(Button, {\n        title: \"OK\",\n        onPress: function onPress() {\n          props.addToDo(todo);\n          setTodo(\"\");\n          props.onClose();\n        }\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","AppStyles","AddToDoModal","props","useState","todo","setTodo","container","header","textInput","darkTextInput","rowContainer","rightAligned","rightMargin","onClose","addToDo"],"sources":["D:/Documentos/ToDoApp-React-Native/components/AddToDoModal.js"],"sourcesContent":["import { View, Text, TextInput, Button } from 'react-native';\r\nimport React from 'react';\r\nimport AppStyles from '../styles/AppStyles';\r\n\r\nexport default function AddToDoModal(props) {\r\n  let [todo, setTodo] = React.useState(\"\");\r\n  return (\r\n    <View style={AppStyles.container}>\r\n      <Text style={AppStyles.header}>Add ToDo</Text>\r\n      <TextInput \r\n          style={[AppStyles.textInput, AppStyles.darkTextInput]} \r\n          placeholder='ToDo'\r\n          value={todo}\r\n          onChangeText={setTodo} />\r\n      <View style={[AppStyles.rowContainer, AppStyles.rightAligned, AppStyles.rightMargin]}>\r\n        <Button title=\"Cancel\" onPress={props.onClose} />\r\n        <Button title=\"OK\" onPress={() => {\r\n          props.addToDo(todo);\r\n          setTodo(\"\");\r\n          props.onClose();\r\n        }} />\r\n      </View>\r\n    </View>\r\n  );\r\n}"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP;;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAC1C,sBAAsBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAtB;EAAA;EAAA,IAAKC,IAAL;EAAA,IAAWC,OAAX;;EACA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEL,SAAS,CAACM,SAAvB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEN,SAAS,CAACO,MAAvB;MAAA;IAAA,EADF,EAEE,KAAC,SAAD;MACI,KAAK,EAAE,CAACP,SAAS,CAACQ,SAAX,EAAsBR,SAAS,CAACS,aAAhC,CADX;MAEI,WAAW,EAAC,MAFhB;MAGI,KAAK,EAAEL,IAHX;MAII,YAAY,EAAEC;IAJlB,EAFF,EAOE,MAAC,IAAD;MAAM,KAAK,EAAE,CAACL,SAAS,CAACU,YAAX,EAAyBV,SAAS,CAACW,YAAnC,EAAiDX,SAAS,CAACY,WAA3D,CAAb;MAAA,WACE,KAAC,MAAD;QAAQ,KAAK,EAAC,QAAd;QAAuB,OAAO,EAAEV,KAAK,CAACW;MAAtC,EADF,EAEE,KAAC,MAAD;QAAQ,KAAK,EAAC,IAAd;QAAmB,OAAO,EAAE,mBAAM;UAChCX,KAAK,CAACY,OAAN,CAAcV,IAAd;UACAC,OAAO,CAAC,EAAD,CAAP;UACAH,KAAK,CAACW,OAAN;QACD;MAJD,EAFF;IAAA,EAPF;EAAA,EADF;AAkBD"},"metadata":{},"sourceType":"module"}