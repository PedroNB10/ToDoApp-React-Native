{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppStyles from \"../styles/AppStyles\";\nimport InlineTextButton from \"../components/InlineTextButton\";\nimport React from 'react';\nimport { auth } from \"../firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var background = require(\"../assets/background.jpg\");\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      confirmPassword = _React$useState6[0],\n      setConfirmPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      validationMessage = _React$useState8[0],\n      setValidationMessage = _React$useState8[1];\n\n  var validateAndSet = function validateAndSet(value, valueToCompare, setValue) {\n    if (value !== valueToCompare) {\n      setValidationMessage(\"Passwords do not match.\");\n    } else {\n      setValidationMessage(\"\");\n    }\n\n    setValue(value);\n  };\n\n  var signUp = function signUp() {\n    if (password === confirmPassword) {\n      createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n        sendEmailVerification(auth.currentUser);\n        navigation.navigate(\"ToDo\", {\n          user: userCredential.user\n        });\n      }).catch(function (error) {\n        setValidationMessage(error.message);\n      });\n    }\n  };\n\n  return _jsx(ImageBackground, {\n    style: AppStyles.imageContainer,\n    source: background,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: AppStyles.backgroundCover,\n      behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n      keyboardVerticalOffset: 60,\n      children: [_jsx(Text, {\n        style: [AppStyles.lightText, AppStyles.header],\n        children: \"Sign Up\"\n      }), _jsx(Text, {\n        style: [AppStyles.errorText],\n        children: validationMessage\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"Email\",\n        placeholderTextColor: \"#BEBEBE\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"Password\",\n        placeholderTextColor: \"#BEBEBE\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return validateAndSet(value, confirmPassword, setPassword);\n        }\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"Confirm Password\",\n        placeholderTextColor: \"#BEBEBE\",\n        secureTextEntry: true,\n        value: confirmPassword,\n        onChangeText: function onChangeText(value) {\n          return validateAndSet(value, password, setConfirmPassword);\n        }\n      }), _jsxs(View, {\n        style: [AppStyles.rowContainer, AppStyles.topMargin],\n        children: [_jsx(Text, {\n          style: AppStyles.lightText,\n          children: \"Already have an account? \"\n        }), _jsx(InlineTextButton, {\n          text: \"Login\",\n          onPress: function onPress() {\n            return navigation.popToTop();\n          }\n        })]\n      }), _jsx(Button, {\n        title: \"Sign Up\",\n        onPress: signUp,\n        color: \"#f7b267\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["AppStyles","InlineTextButton","React","auth","createUserWithEmailAndPassword","sendEmailVerification","SignUp","navigation","background","require","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","validationMessage","setValidationMessage","validateAndSet","value","valueToCompare","setValue","signUp","then","userCredential","currentUser","navigate","user","catch","error","message","imageContainer","backgroundCover","Platform","OS","lightText","header","errorText","textInput","lightTextInput","rowContainer","topMargin","popToTop"],"sources":["D:/Documentos/ToDoApp-React-Native/screens/SignUp.js"],"sourcesContent":["import { Text, View, TextInput, ImageBackground, Button, KeyboardAvoidingView, Platform } from 'react-native';\r\nimport AppStyles from '../styles/AppStyles';\r\nimport InlineTextButton from '../components/InlineTextButton';\r\nimport React from 'react';\r\nimport { auth } from \"../firebase\";\r\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\r\n\r\nexport default function SignUp({ navigation }) {\r\n  const background = require(\"../assets/background.jpg\");\r\n\r\n  let [email, setEmail] = React.useState(\"\");\r\n  let [password, setPassword] = React.useState(\"\");\r\n  let [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n  let [validationMessage, setValidationMessage] = React.useState(\"\");\r\n\r\n  let validateAndSet = (value, valueToCompare, setValue) => {\r\n    if (value !== valueToCompare) {\r\n      setValidationMessage(\"Passwords do not match.\");\r\n    } else {\r\n      setValidationMessage(\"\");\r\n    }\r\n\r\n    setValue(value);\r\n  };\r\n\r\n  let signUp = () => {\r\n    if (password === confirmPassword) {\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        sendEmailVerification(auth.currentUser);\r\n        navigation.navigate(\"ToDo\", { user: userCredential.user });\r\n      })\r\n      .catch((error) => {\r\n        setValidationMessage(error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ImageBackground style={AppStyles.imageContainer} source={background}>\r\n      <KeyboardAvoidingView \r\n        style={AppStyles.backgroundCover} \r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n        keyboardVerticalOffset={60}>\r\n        <Text style={[AppStyles.lightText, AppStyles.header]}>Sign Up</Text>\r\n        <Text style={[AppStyles.errorText]}>{validationMessage}</Text>\r\n        <TextInput \r\n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \r\n          placeholder='Email' \r\n          placeholderTextColor=\"#BEBEBE\"\r\n          value={email}\r\n          onChangeText={setEmail} />\r\n        <TextInput \r\n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \r\n          placeholder='Password' \r\n          placeholderTextColor=\"#BEBEBE\" \r\n          secureTextEntry={true} \r\n          value={password} \r\n          onChangeText={(value) => validateAndSet(value, confirmPassword, setPassword)} />\r\n        <TextInput \r\n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \r\n          placeholder='Confirm Password' \r\n          placeholderTextColor=\"#BEBEBE\" \r\n          secureTextEntry={true} \r\n          value={confirmPassword} \r\n          onChangeText={(value) => validateAndSet(value, password, setConfirmPassword)} />\r\n        <View style={[AppStyles.rowContainer, AppStyles.topMargin]}>\r\n          <Text style={AppStyles.lightText}>Already have an account? </Text>\r\n          <InlineTextButton text=\"Login\" onPress={() => navigation.popToTop()} />\r\n        </View>\r\n        <Button title=\"Sign Up\" onPress={signUp} color=\"#f7b267\" />\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}