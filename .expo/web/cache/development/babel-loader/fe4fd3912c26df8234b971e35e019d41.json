{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppStyles from \"../styles/AppStyles\";\nimport InlineTextButton from \"../components/InlineTextButton\";\nimport React from 'react';\nimport { auth } from \"../firebase\";\nimport { sendPasswordResetEmail } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResetPassword(_ref) {\n  var navigation = _ref.navigation;\n\n  var background = require(\"../assets/background.jpg\");\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      errorMessage = _React$useState4[0],\n      setErrorMessage = _React$useState4[1];\n\n  var resetPassword = function resetPassword() {\n    sendPasswordResetEmail(auth, email).then(function () {\n      navigation.popToTop();\n    }).catch(function (error) {\n      setErrorMessage(error.message);\n    });\n  };\n\n  return _jsx(ImageBackground, {\n    style: AppStyles.imageContainer,\n    source: background,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: AppStyles.backgroundCover,\n      behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n      keyboardVerticalOffset: 60,\n      children: [_jsx(Text, {\n        style: [AppStyles.lightText, AppStyles.header],\n        children: \"Reset Password\"\n      }), _jsx(Text, {\n        style: AppStyles.errorText,\n        children: errorMessage\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"Email\",\n        placeholderTextColor: \"#BEBEBE\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsxs(View, {\n        style: [AppStyles.rowContainer, AppStyles.topMargin],\n        children: [_jsx(Text, {\n          style: AppStyles.lightText,\n          children: \"Don't have an account? \"\n        }), _jsx(InlineTextButton, {\n          text: \"Sign Up\",\n          onPress: function onPress() {\n            return navigation.navigate(\"SignUp\");\n          }\n        })]\n      }), _jsx(Button, {\n        title: \"Reset Password\",\n        onPress: resetPassword,\n        color: \"#f7b267\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["AppStyles","InlineTextButton","React","auth","sendPasswordResetEmail","ResetPassword","navigation","background","require","useState","email","setEmail","errorMessage","setErrorMessage","resetPassword","then","popToTop","catch","error","message","imageContainer","backgroundCover","Platform","OS","lightText","header","errorText","textInput","lightTextInput","rowContainer","topMargin","navigate"],"sources":["D:/Documentos/ToDoApp-React-Native/screens/ResetPassword.js"],"sourcesContent":["import { Text, View, TextInput, ImageBackground, Button, KeyboardAvoidingView, Platform } from 'react-native';\r\nimport AppStyles from '../styles/AppStyles';\r\nimport InlineTextButton from '../components/InlineTextButton';\r\nimport React from 'react';\r\nimport { auth } from \"../firebase\";\r\nimport { sendPasswordResetEmail } from 'firebase/auth';\r\n\r\nexport default function ResetPassword({ navigation }) {\r\n  const background = require(\"../assets/background.jpg\");\r\n\r\n  let [email, setEmail] = React.useState(\"\");\r\n  let [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n  let resetPassword = () => {\r\n    sendPasswordResetEmail(auth, email)\r\n      .then(() => {\r\n        navigation.popToTop();\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(error.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <ImageBackground style={AppStyles.imageContainer} source={background}>\r\n      <KeyboardAvoidingView \r\n        style={AppStyles.backgroundCover} \r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n        keyboardVerticalOffset={60}>\r\n        <Text style={[AppStyles.lightText, AppStyles.header]}>Reset Password</Text>\r\n        <Text style={AppStyles.errorText}>{errorMessage}</Text>\r\n        <TextInput \r\n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \r\n          placeholder='Email' \r\n          placeholderTextColor=\"#BEBEBE\"\r\n          value={email}\r\n          onChangeText={setEmail} />\r\n        <View style={[AppStyles.rowContainer, AppStyles.topMargin]}>\r\n          <Text style={AppStyles.lightText}>Don't have an account? </Text>\r\n          <InlineTextButton text=\"Sign Up\" onPress={() => navigation.navigate(\"SignUp\")} />\r\n        </View>\r\n        <Button title=\"Reset Password\" onPress={resetPassword} color=\"#f7b267\" />\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;;;;;;;AACA,OAAOA,SAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT;AACA,SAASC,sBAAT,QAAuC,eAAvC;;;AAEA,eAAe,SAASC,aAAT,OAAuC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACpD,IAAMC,UAAU,GAAGC,OAAO,4BAA1B;;EAEA,sBAAwBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAxB;EAAA;EAAA,IAAKC,KAAL;EAAA,IAAYC,QAAZ;;EACA,uBAAsCT,KAAK,CAACO,QAAN,CAAe,EAAf,CAAtC;EAAA;EAAA,IAAKG,YAAL;EAAA,IAAmBC,eAAnB;;EAEA,IAAIC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IACxBV,sBAAsB,CAACD,IAAD,EAAOO,KAAP,CAAtB,CACGK,IADH,CACQ,YAAM;MACVT,UAAU,CAACU,QAAX;IACD,CAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW;MAChBL,eAAe,CAACK,KAAK,CAACC,OAAP,CAAf;IACD,CANH;EAOD,CARD;;EAUA,OACE,KAAC,eAAD;IAAiB,KAAK,EAAEnB,SAAS,CAACoB,cAAlC;IAAkD,MAAM,EAAEb,UAA1D;IAAA,UACE,MAAC,oBAAD;MACE,KAAK,EAAEP,SAAS,CAACqB,eADnB;MAEE,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,IAFhD;MAGE,sBAAsB,EAAE,EAH1B;MAAA,WAIE,KAAC,IAAD;QAAM,KAAK,EAAE,CAACvB,SAAS,CAACwB,SAAX,EAAsBxB,SAAS,CAACyB,MAAhC,CAAb;QAAA;MAAA,EAJF,EAKE,KAAC,IAAD;QAAM,KAAK,EAAEzB,SAAS,CAAC0B,SAAvB;QAAA,UAAmCd;MAAnC,EALF,EAME,KAAC,SAAD;QACE,KAAK,EAAE,CAACZ,SAAS,CAAC2B,SAAX,EAAsB3B,SAAS,CAAC4B,cAAhC,EAAgD5B,SAAS,CAACwB,SAA1D,CADT;QAEE,WAAW,EAAC,OAFd;QAGE,oBAAoB,EAAC,SAHvB;QAIE,KAAK,EAAEd,KAJT;QAKE,YAAY,EAAEC;MALhB,EANF,EAYE,MAAC,IAAD;QAAM,KAAK,EAAE,CAACX,SAAS,CAAC6B,YAAX,EAAyB7B,SAAS,CAAC8B,SAAnC,CAAb;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAE9B,SAAS,CAACwB,SAAvB;UAAA;QAAA,EADF,EAEE,KAAC,gBAAD;UAAkB,IAAI,EAAC,SAAvB;UAAiC,OAAO,EAAE;YAAA,OAAMlB,UAAU,CAACyB,QAAX,CAAoB,QAApB,CAAN;UAAA;QAA1C,EAFF;MAAA,EAZF,EAgBE,KAAC,MAAD;QAAQ,KAAK,EAAC,gBAAd;QAA+B,OAAO,EAAEjB,aAAxC;QAAuD,KAAK,EAAC;MAA7D,EAhBF;IAAA;EADF,EADF;AAsBD"},"metadata":{},"sourceType":"module"}