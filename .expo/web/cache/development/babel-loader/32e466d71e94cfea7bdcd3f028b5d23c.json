{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppStyles from \"../styles/AppStyles\";\nimport InlineTextButton from \"../components/InlineTextButton\";\nimport React from 'react';\nimport { auth } from \"../firebase\";\nimport { signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var background = require(\"../assets/background.jpg\");\n\n  if (auth.currentUser) {\n    navigation.navigate(\"ToDo\");\n  } else {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        navigation.navigate(\"ToDo\");\n      }\n    });\n  }\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      errorMessage = _React$useState2[0],\n      setErrorMessage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var login = function login() {\n    if (email !== \"\" && password !== \"\") {\n      signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n        navigation.navigate(\"ToDo\", {\n          user: userCredential.user\n        });\n        setErrorMessage(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n      }).catch(function (error) {\n        setErrorMessage(error.message);\n      });\n    } else {\n      setErrorMessage(\"Please enter an email and password\");\n    }\n  };\n\n  return _jsx(ImageBackground, {\n    style: AppStyles.imageContainer,\n    source: background,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: AppStyles.backgroundCover,\n      behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n      keyboardVerticalOffset: 60,\n      children: [_jsx(Text, {\n        style: [AppStyles.lightText, AppStyles.header],\n        children: \"Login\"\n      }), _jsx(Text, {\n        style: AppStyles.errorText,\n        children: errorMessage\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"Email\",\n        placeholderTextColor: \"#BEBEBE\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"Password\",\n        placeholderTextColor: \"#BEBEBE\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: setPassword\n      }), _jsxs(View, {\n        style: [AppStyles.rowContainer, AppStyles.topMargin],\n        children: [_jsx(Text, {\n          style: AppStyles.lightText,\n          children: \"Don't have an account? \"\n        }), _jsx(InlineTextButton, {\n          text: \"Sign Up\",\n          onPress: function onPress() {\n            return navigation.navigate(\"SignUp\");\n          }\n        })]\n      }), _jsxs(View, {\n        style: [AppStyles.rowContainer, AppStyles.bottomMargin],\n        children: [_jsx(Text, {\n          style: AppStyles.lightText,\n          children: \"Forgotten your password? \"\n        }), _jsx(InlineTextButton, {\n          text: \"Reset\",\n          onPress: function onPress() {\n            return navigation.navigate(\"ResetPassword\");\n          }\n        })]\n      }), _jsx(Button, {\n        title: \"Login\",\n        onPress: login,\n        color: \"#f7b267\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["AppStyles","InlineTextButton","React","auth","signInWithEmailAndPassword","onAuthStateChanged","Login","navigation","background","require","currentUser","navigate","user","useState","errorMessage","setErrorMessage","email","setEmail","password","setPassword","login","then","userCredential","catch","error","message","imageContainer","backgroundCover","Platform","OS","lightText","header","errorText","textInput","lightTextInput","rowContainer","topMargin","bottomMargin"],"sources":["D:/Documentos/ToDoApp-React-Native/screens/Login.js"],"sourcesContent":["import { Text, View, TextInput, ImageBackground, Button, KeyboardAvoidingView, Platform } from 'react-native';\r\nimport AppStyles from '../styles/AppStyles';\r\nimport InlineTextButton from '../components/InlineTextButton';\r\nimport React from 'react';\r\nimport { auth } from \"../firebase\";\r\nimport { signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nexport default function Login({ navigation }) {\r\n  const background = require(\"../assets/background.jpg\");\r\n\r\n  if (auth.currentUser) {\r\n    navigation.navigate(\"ToDo\");\r\n  } else {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        navigation.navigate(\"ToDo\");\r\n      }\r\n    });\r\n  }\r\n\r\n  let [errorMessage, setErrorMessage] = React.useState(\"\");\r\n  let [email, setEmail] = React.useState(\"\");\r\n  let [password, setPassword] = React.useState(\"\");\r\n\r\n  let login = () => {\r\n    if (email !== \"\" && password !== \"\") {\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then((userCredential) => {\r\n          navigation.navigate(\"ToDo\", { user: userCredential.user });\r\n          setErrorMessage(\"\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message)\r\n        });\r\n    } else {\r\n      setErrorMessage(\"Please enter an email and password\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ImageBackground style={AppStyles.imageContainer} source={background}>\r\n      <KeyboardAvoidingView \r\n        style={AppStyles.backgroundCover} \r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n        keyboardVerticalOffset={60}>\r\n        <Text style={[AppStyles.lightText, AppStyles.header]}>Login</Text>\r\n        <Text style={AppStyles.errorText}>{errorMessage}</Text>\r\n        <TextInput \r\n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \r\n          placeholder='Email' \r\n          placeholderTextColor=\"#BEBEBE\"\r\n          value={email}\r\n          onChangeText={setEmail} />\r\n        <TextInput \r\n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \r\n          placeholder='Password' \r\n          placeholderTextColor=\"#BEBEBE\" \r\n          secureTextEntry={true} \r\n          value={password} \r\n          onChangeText={setPassword} />\r\n        <View style={[AppStyles.rowContainer, AppStyles.topMargin]}>\r\n          <Text style={AppStyles.lightText}>Don't have an account? </Text>\r\n          <InlineTextButton text=\"Sign Up\" onPress={() => navigation.navigate(\"SignUp\")} />\r\n        </View>\r\n        <View style={[AppStyles.rowContainer, AppStyles.bottomMargin]}>\r\n          <Text style={AppStyles.lightText}>Forgotten your password? </Text>\r\n          <InlineTextButton text=\"Reset\" onPress={() => navigation.navigate(\"ResetPassword\")} />\r\n        </View>\r\n        <Button title=\"Login\" onPress={login} color=\"#f7b267\" />\r\n      </KeyboardAvoidingView>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}